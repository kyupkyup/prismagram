type User {
  id: ID! @id
  avatar: String
  userName: String! @unique
  email: String! @unique
  firstName: String @default(value: "")
  lastName: String
  fullName: String  
  bio: String 
  followings: [User!]! @relation(name: "FollowRelation")
  followers: [User!]! @relation(name: "FollowRelation")
  posts: [Post!]! @relation(name: "PostsOfUser", onDelete: CASCADE)
  likes: [Like!]! @relation(name: "LikesOfUser", onDelete: CASCADE)
  comments: [Comment!]! @relation(name: "CommentsOfUser", onDelete: CASCADE)
  rooms: [Room!]!
  loginSecret: String
  createdAt: DateTime @createdAt
}

type Post {
  id: ID! @id
  files: [File!]! @relation(name: "FilesOfPost", onDelete: CASCADE)
  location: String!
  user: [User!]! @relation(name: "PostsOfUser", onDelete: CASCADE)
  caption: String! 
  likes: [Like!] @relation(name: "LikeOfPost", onDelete: CASCADE)
  comments: [Comment!] 
  isLiked: Boolean!
  createdAt: DateTime @createdAt

}

type Like {
  id: ID!  @id
  user: User @relation(name: "LikesOfUser")
  post: Post @relation(name: "LikeOfPost")
  createdAt: DateTime @createdAt

}

type Comment {
  id: ID! @id
  text: String!
  user: User @relation(name: "CommentsOfUser")
  post: Post 
  createdAt: DateTime @createdAt
  
}

type File {
  id: ID!  @id
  url: String!
  post: Post @relation(name: "FilesOfPost")
  createdAt: DateTime @createdAt
}

type Room {
  id: ID! @id
  participants: [User!]!
  messages: [Message!]!
  createdAt: DateTime @createdAt
}

type Message {
  id: ID! @id 
  text: String!
  from: User! @relation(name: "From")
  to: User! @relation(name: "To")
  room: Room!
  createdAt: DateTime @createdAt
}

